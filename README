This is to build Debian Buster pn532nfc test sdcard image for following SBC's:
rpi4b  ( Raspberry Pi 4B )
radxa  ( Rock Pi 4B plus )
rk3328 ( Renegade ROC-RK3328-CC )
tinker ( ASUS TinkerBoard )

Parts required:
1. nfc host controller card: Adafruit PN532 NFC Shield.
2. Mifare Classic card and Mifare Ultralight tag. 

The following 8 tests are included:
1. iso14443a_uid  ( read nfc card's uid )
2. memdump        ( dump all memory in the nfc cards )
3. readMifare     ( write read memory in the nfc cards )
4. ntag21x_rw     ( write read mifareultralight )
5. memerase       ( erase all memory in the nfc cards )
6. formatndef     ( change mifareclassic to mifareclassic_ndef )
7. updatendef     ( write read mifareclassic_ndef )
8. ndeftoclassic  ( change mifareclassic_ndef to mifareclassic )

Steps to build Debian Buster pn532nfc test sdcard image:

1. git clone https://github.com/chenphilip888/build-buster-pn532nfc.git
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python-dev python-setuptools python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler python swig

2. Install cross compiler and live-build:
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/aarch64-linux-gnu/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/7.3-2018.05/arm-linux-gnueabihf/gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/
   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts dh-systemd isolinux po4a
   wget https://launchpad.net/debian/+archive/primary/+sourcefiles/live-build/1:20210407/live-build_20210407.tar.xz
   tar xvf live-build_20210407.tar.xz
   cd live-build
   sudo make install

3. cd ~/build-buster-pn532nfc/rpi4b
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-5.4.y
   cd linux; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make all
   The result is in ./out/sdcard.img
   make cleanall

   sudo dd if=./out/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   Eject sdcard, plugin sdcard, cp ./pn532nfc/* /media/$USER/b*/home/linaro
   sync
   Eject sdcard

4. cd ~/build-buster-pn532nfc/radxa
   git clone https://github.com/radxa/u-boot --depth=1 -b stable-4.4-rockpi4
   git clone https://github.com/radxa/kernel --depth=1 -b release-4.4-rockpi4
   cd kernel; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make all
   The result is in ./out/sdcard.img
   make cleanall

   sudo dd if=./out/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   Eject sdcard, plugin sdcard, cp ./pn532nfc/* /media/$USER/b*/home/linaro
   sync
   Eject sdcard

5. cd ~/build-buster-pn532nfc/rk3328
   git clone https://github.com/u-boot/u-boot
   git clone https://github.com/FireflyTeam/kernel --depth=1 -b rk3328/firefly
   cd kernel; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make all
   The result is in ./out/sdcard.img
   make cleanall

   sudo dd if=./out/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   Eject sdcard, plugin sdcard, cp ./pn532nfc/* /media/$USER/b*/home/linaro
   sync
   Eject sdcard

6. cd ~/build-buster-pn532nfc/tinker
   git clone https://github.com/TinkerBoard/debian_u-boot.git --depth=1 -b release
   wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.10.tar.xz
   tar -xJf linux-5.10.tar.xz
   cd linux-5.10; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make all
   The result is in ./out/sdcard.img
   make cleanall

   sudo dd if=./out/sdcard.img of=/dev/mmcblk0 bs=4096 conv=notrunc,fsync
   Eject sdcard, plugin sdcard, cp ./pn532nfc/* /media/$USER/b*/home/linaro
   sync
   Eject sdcard

Plugin usb wifi dongle to rk3328.
Plugin ethernet cable to tinker.
Plugin sdcard to SBC
Login:
Username: linaro
Password: linaro
uname -a
lsb_release -a
Setup wifi for radxa, rk3328 and rpi4b:
nmcli dev wifi connect "SSID" password "PASSWORD"
sudo dpkg-reconfigure tzdata
sudo dpkg-reconfigure locales
sudo apt update
sudo apt upgrade
sync
sudo reboot
date

sudo pip3 install python-periphery smbus2

For tinker, Download gpio library:
git clone https://github.com/TinkerBoard/gpio_lib_c.git
cd gpio_lib_c
chmod a+x build
sudo ./build

For rpi4b, Download gpio library:
wget https://project-downloads.drogon.net/wiringpi-latest.deb
sudo dpkg -i wiringpi-latest.deb
gpio -v

Check kernel driver readiness for rpi4b:
sudo cat /proc/device-tree/soc/i2c@7e804000/status  ( i2c-1 )
sudo cat /proc/device-tree/soc/spi@7e204000/status  ( spi-0 )

Check kernel driver readiness for radxa:
sudo cat /proc/device-tree/i2c@ff160000/status  ( i2c-7 )
sudo cat /proc/device-tree/spi@ff1e0000/status  ( spi-2 )

Check kernel driver readiness for rk3328:
sudo cat /proc/device-tree/i2c@ff160000/status  ( i2c-1 )
sudo cat /proc/device-tree/spi@ff190000/status  ( spi-0 )

Check kernel driver readiness for tinker:
sudo cat /proc/device-tree/i2c@ff140000/status  ( i2c-1 )
sudo cat /proc/device-tree/spi@ff130000/status  ( spi-2 )

ls -la /dev

-----------------------------------------------------------------------------

Datasheet of pn532 in https://www.nxp.com/docs/en/nxp/data-sheets/PN532_C1.pdf
application: https://www.nxp.com/docs/en/user-guide/141520.pdf
https://raspberrypi.stackexchange.com/questions/109773/how-can-rpi-spi-python-read-the-mfrc522-nfc-module
NFC info see https://www.nxp.com/docs/en/application-note/AN1305.pdf
             https://www.nxp.com/docs/en/application-note/AN1304.pdf
             https://www.nxp.com/docs/en/data-sheet/MF0ICU2.pdf
examples: see https://github.com/nfc-tools/libfreefare/
Tutorial: see https://learn.adafruit.com/adafruit-pn532-rfid-nfc/mifare
To use Adafruit PN532 NFC Shield see https://learn.adafruit.com/adafruit-pn532-rfid-nfc

-----------------------------------------------------------------------------

Here are the summary of the tests:

For spi:
   Connect gpio pin 19 to oled display MOSI.  ( rpi4b spi-0 )
   Connect gpio pin 24 to oled display SSEL.
   Connect gpio pin 21 to oled display MISO.
   Connect gpio pin 23 to oled display SCLK.
   Connect gpio pin 29 to oled display MOSI.  ( radxa spi-2 )
   Connect gpio pin 33 to oled display SSEL.
   Connect gpio pin 31 to oled display MISO.
   Connect gpio pin  7 to oled display SCLK.
   Connect gpio pin 19 to oled display MOSI.  ( rk3328 spi-0 )
   Connect gpio pin 24 to oled display SSEL.
   Connect gpio pin 21 to oled display MISO.
   Connect gpio pin 23 to oled display SCLK.
   Connect gpio pin 19 to oled display MOSI.  ( tinker spi-2 )
   Connect gpio pin 24 to oled display SSEL.
   Connect gpio pin 21 to oled display MISO.
   Connect gpio pin 23 to oled display SCLK.
   Connect gpio pin  2 to oled display 5V.
   Connect gpio pin  9 to oled display ground.

For i2c:
   Connect gpio pin  3 to lcd display SDA. ( rpi4b i2c-1 ).
   Connect gpio pin  5 to lcd display SCL.
   Connect gpio pin  3 to lcd display SDA. ( radxa i2c-7 ).
   Connect gpio pin  5 to lcd display SCL.
   Connect gpio pin 27 to lcd display SDA. ( rk3328 i2c-1 ).
   Connect gpio pin 28 to lcd display SCL.
   Connect gpio pin  3 to lcd display SDA. ( tinker i2c-1 ).
   Connect gpio pin  5 to lcd display SCL.
   Connect gpio pin  2 to lcd display 5V.
   Connect gpio pin  9 to lcd display ground.

For spi:
make -f Makefile.spi all
For i2c:
make -f Makefile.i2c all

sudo ./iso14443a_uid   ( for mifareclassic and mifareultralight )
sudo ./memdump         ( for mifareclassic and mifareultralight )
sudo ./readMifare      ( for mifareclassic and mifareultralight )
sudo ./memdump         ( for mifareclassic and mifareultralight )
sudo ./ntag21x_rw      ( for mifareultralight )
sudo ./memdump         ( for mifareultralight )
sudo ./memerase        ( for mifareclassic and mifareultralight )
sudo ./memdump         ( for mifareclassic and mifareultralight )
sudo ./formatndef      ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )
sudo ./updatendef      ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )
sudo ./memerase        ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )
sudo ./ndeftoclassic   ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )
sudo ./readMifare      ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )
sudo ./memerase        ( for mifareclassic )
sudo ./memdump         ( for mifareclassic )

For spi:
change *.py file to use SPI ( from pn532_spi import * )
For i2c:
change *.py file to use I2C ( from pn532_i2c import * )

sudo python3 iso14443a_uid.py   ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 readMifare.py      ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 ntag21x_rw.py      ( for mifareultralight )
sudo python3 memdump.py         ( for mifareultralight )
sudo python3 memerase.py        ( for mifareclassic and mifareultralight )
sudo python3 memdump.py         ( for mifareclassic and mifareultralight )
sudo python3 formatndef.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 updatendef.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 memerase.py        ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 ndeftoclassic.py   ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 readMifare.py      ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )
sudo python3 memerase.py        ( for mifareclassic )
sudo python3 memdump.py         ( for mifareclassic )

-----------------------------------------------------------------------------
